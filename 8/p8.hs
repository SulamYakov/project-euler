-- Project Euclid : Problem 8

-- note that cases where an element is 0 do not need to be considered, because they will yield a zero product.

-- break up large number into digits list, and take 13 each time, skipping over cases when a zero is encountered. 
-- when a zero is encountered, move the take to the index after the 0. 

-- make a list of all indices corresponding to a zero value. Eliminate all cases where the take is 12 to the right or left of the zero
-- index. Then, applicate (*) into the list of lists.  
digs :: (Integral a) => a -> [a]
digs 0 = []
digs x = x `mod` 10 : digs (x `div` 10)

digs

